name: Deployment Protection

on:
  pull_request:
    branches: [ main, staging ]
  push:
    branches: [ main, staging ]

env:
  NODE_ENV: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
  NEXT_PUBLIC_API_URL: ${{ github.ref == 'refs/heads/main' && 'https://api.synapticai.app' || 'https://api-staging.synapticai.app' }}
  NEXT_PUBLIC_APP_ENV: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
  NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
  NEXT_PUBLIC_POSTHOG_KEY: ${{ secrets.NEXT_PUBLIC_POSTHOG_KEY }}
  NEXT_PUBLIC_POSTHOG_HOST: ${{ secrets.NEXT_PUBLIC_POSTHOG_HOST }}
  NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
  NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: TypeScript check
        run: yarn tsc --noEmit

      - name: Lint check
        run: yarn lint

      - name: Unit tests
        run: yarn test
        env:
          NEXT_PUBLIC_USE_MOCK_CLAUDE: 'true'
          NEXT_PUBLIC_MOCK_RESPONSE_DELAY: '0'

      - name: Visual tests
        run: yarn test:visual
        env:
          NEXT_PUBLIC_USE_MOCK_CLAUDE: 'true'
          NEXT_PUBLIC_MOCK_RESPONSE_DELAY: '0'

      - name: Build check
        run: yarn build
        env:
          NEXT_PUBLIC_USE_MOCK_CLAUDE: 'true'

      - name: Analyze bundle
        run: yarn analyze

      - name: Check dependencies
        run: yarn check-deps

      - name: Security check
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  environment-validation:
    runs-on: ubuntu-latest
    needs: [quality-checks]
    steps:
      - name: Validate environment configuration
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "Validating production environment configuration..."
            [[ -z "${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}" ]] && echo "Error: NEXT_PUBLIC_SENTRY_DSN is required for production" && exit 1
            [[ -z "${{ secrets.NEXT_PUBLIC_POSTHOG_KEY }}" ]] && echo "Error: NEXT_PUBLIC_POSTHOG_KEY is required for production" && exit 1
            [[ -z "${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}" ]] && echo "Error: NEXT_PUBLIC_SUPABASE_URL is required for production" && exit 1
            [[ -z "${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}" ]] && echo "Error: NEXT_PUBLIC_SUPABASE_ANON_KEY is required for production" && exit 1
          else
            echo "Validating staging environment configuration..."
          fi

  deployment-approval:
    needs: [quality-checks, environment-validation]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deployment approval check
        run: |
          echo "All quality checks and environment validations passed"
          echo "Deployment to production is approved" 