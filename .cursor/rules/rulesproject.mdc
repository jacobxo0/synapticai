---
description: 
globs: 
alwaysApply: false
---
[GOAL]  
Implement a comprehensive set of automated project rules and developer guardrails for a Next.js 14 App Router project using Prisma, TypeScript, Vercel, and modern best practices.

[USER CONTEXT]  
The user is running a production-focused Next.js application with a PostgreSQL database via Prisma, authentication via NextAuth v5, and TypeScript with strict typing. They are deploying to Vercel and want to prevent recurring issues like:
- Missing Prisma models
- Invalid schema files
- Broken import paths
- Unused or loose types
- Unvalidated commits reaching GitHub

[DELIVERABLES]  
Claude must generate the following:

---

### ✅ 1. Prisma Schema Validation
- Add `prisma validate` and `prisma format` commands
- Optionally include `migrate status` in CI pipeline

---

### ✅ 2. TypeScript Strict Mode
Update `tsconfig.json` to include:
```json
{
  "compilerOptions": {
    "strict": true,
    "noImplicitAny": true,
    "skipLibCheck": false,
    "noUnusedLocals": true
  }
}
